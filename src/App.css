#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

:root {
  --app-bg: #f2ede5; /* requested background */
  /* Primary (main) color used for large UI elements */
  --main-color: #cfad8f; /* user-requested main colour */
  /* Accent color for borders, shadows and small highlights */
  --accent-color: #0e4a4d; /* accent colour */
  /* Backwards-compatible alias used in some selectors */
  --main-accent: var(--accent-color);
  --app-text: #9e6743; /* requested text colour */
  --btn-text-on-accent: #ffffff;
}

.bg-app-bg, body {
  background-color: var(--app-bg) !important;
  color: var(--app-text) !important;
}

/* Keep the container background transparent so the decorative image can show through */
.app-container {
  background-color: transparent !important;
}

/* Decorative background image (semi-transparent) applied behind the app content.
   Uses a pseudo-element so the image can have independent opacity without affecting
   foreground elements. Adjust the raw URL below if the image location changes. */
.app-container {
  position: relative;
  /* container stays transparent so decorative background shows through */
  background-color: transparent !important;
}

/* Ensure app content stacks above the decorative background */
.app-container > * {
  position: relative;
  z-index: 1;
}

/* Decorative background image element styles. Use fixed positioning so the
   image fills the viewport and scales correctly (object-fit: cover). The
   image is intentionally placed behind content via z-index. */
.app-bg-image {
  position: fixed !important; /* fill the viewport regardless of container size */
  inset: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  display: block !important;
  object-fit: cover !important; /* scale and crop to fill */
  object-position: center center !important; /* center the visible area */
  opacity: 0.27 !important; /* 27% opacity */
  pointer-events: none !important;
  z-index: 0 !important;
}

/* Preset scaling modes for the background image. Toggle these classes on the
   <img> to change how it fits. Default is .preset-cover-center. */
.preset-cover-center {
  object-fit: cover !important;
  object-position: center center !important;
  width: 100% !important;
  height: 100% !important;
}
.preset-contain-center {
  /* Fit vertically: make the image height equal to the viewport and keep
     aspect ratio (width auto). Center horizontally. */
  object-fit: contain !important;
  object-position: center center !important;
  height: 100vh !important;
  width: auto !important;
  left: 50% !important;
  top: 0 !important;
  transform: translateX(-50%) !important;
}
.preset-cover-left {
  object-fit: cover !important;
  object-position: left center !important;
  width: 100% !important;
  height: 100% !important;
}
.preset-zoom {
  object-fit: cover !important;
  object-position: center center !important;
  width: 120% !important; /* zoom in */
  height: 120% !important;
  transform: translate(-10%, -10%) scale(1.05) !important;
}

/* Fit-center preset: cover the viewport and center the image */
.preset-fit-center {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  object-fit: cover !important;
  object-position: center center !important;
  transform: none !important;
}

/* ensure text inside uses the app text unless a more specific utility overrides it */
.app-container * {
  color: inherit !important;
}

/* Override common Tailwind background utilities inside the app so the app palette shows through */
.app-container .bg-white,
.app-container .bg-slate-100,
.app-container .bg-slate-50,
.app-container .bg-slate-200,
.app-container .bg-slate-900\/50 {
  background-color: rgba(255,255,255,0.88) !important;
}

/* Map slate text utilities to the app text color */
.app-container .text-slate-900,
.app-container .text-slate-800,
.app-container .text-slate-700 {
  color: var(--app-text) !important;
}
.app-container .text-slate-600,
.app-container .text-slate-500,
.app-container .text-slate-400 {
  color: rgba(158,103,67,0.85) !important; /* lighter versions of app text */
}

/* Border tinting to match accent */
.app-container .border-slate-200,
.app-container .border-slate-300,
.app-container .dark\:border-slate-700 {
  border-color: rgba(14,74,77,0.06) !important;
}

.main-accent {
  color: var(--main-accent) !important;
}

.logo {
  /* Use relative sizing so the logo scales with viewport.
     width is in viewport units (vw) with min/max constraints
     so it stays usable on very small or very large screens. */
  width: 10vw !important;        /* relative to viewport width */
  height: auto !important;       /* preserve aspect ratio */
  min-width: 20px;               /* never shrink below this */
  max-width: 64px !important;    /* cap the size on larger screens */
  max-height: 64px !important;
  border-radius: 0.375rem;
  object-fit: cover;
  /* tint shadow toward accent */
  box-shadow: 0 6px 18px rgba(14,74,77,0.08);
  transition: transform 220ms ease, box-shadow 220ms ease;
  flex-shrink: 0;
}
.logo:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 10px 26px rgba(14,74,77,0.12);
}

/* Medium screens: a smaller vw so it visually reduces relative size */
@media (min-width: 640px) {
  .logo {
    width: 6.5vw !important;
    max-width: 72px !important;
    max-height: 72px !important;
    border-radius: 0.5rem;
  }
}

/* Large screens: tighten the vw and rely on max-width */
@media (min-width: 1024px) {
  .logo {
    /* Use an explicit desktop size to match the requested computed width */
    width: 93.75px !important;
    height: auto !important;
    max-width: 93.75px !important;
    max-height: none !important;
  }
}

.app-header-title {
  color: var(--app-text) !important;
}

.btn-primary {
  /* Use the main color for primary actions */
  background-color: var(--main-color);
  color: var(--btn-text-on-accent);
  border: none;
  /* keep an accent-tinted shadow for depth */
  box-shadow: 0 8px 18px rgba(14,74,77,0.12);
}
.btn-primary:hover {
  filter: brightness(0.95);
}
.btn-primary:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(14,74,77,0.12);
}

/* card surface that respects the app background and shows accent borders */
.card-surface {
  background-color: rgba(255,255,255,0.85);
  border: 1px solid rgba(14,74,77,0.06);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
